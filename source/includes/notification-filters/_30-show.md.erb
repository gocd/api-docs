## Get a notification filter

```shell
$ curl 'https://ci.example.com/go/api/notification_filters/1' \
  -u 'username:password' \
  -H 'Accept: <%= data.apis.versions.notification_filters %>'
```

> The above command returns JSON structured like this:

```http
HTTP/1.1 200 OK
Content-Type: <%= data.apis.versions.notification_filters %>; charset=utf-8
```

```json
{
  "_links" : {
    "self" : {
      "href" : "https://ci.example.com/go/api/notification_filters/1"
    },
    "doc" : {
      "href" : "https://api.gocd.org/#notification-filters"
    },
    "find" : {
      "href" : "https://ci.example.com/go/api/notification_filters/:id"
    }
  },
  "id" : 1,
  "pipeline" : "up42",
  "stage" : "up42_stage",
  "event" : "Fails",
  "match_commits" : false
}
```

Get a notification filter for the authenticated user.

<%= updated_to(2,'20.1.0') %>
<%= available_since("17.5.0") %>

<p class="http-request-heading">HTTP Request</p>

`GET /go/api/notification_filters/:id`

The following properties may be specified:

<%=
describe_object nil do
  pipeline       "String",   "The name of the pipeline to get notification for. Can also be `[Any Pipeline]` to get notification for any pipeline.", mandatory: true
  stage          "String",   "The name of the stage to get notification for. Can also be `[Any Stage]` to get notification for any stage.", mandatory: true
  event          "String",   "The name of event to get notificaton for. Can be one of: `All`, `Passes`, `Fails`, `Breaks`, `Fixed`, `Cancelled`.", mandatory: true
  match_commits  "Boolean",  "Boolean indicating if the notification filter should match only the user's commits (true) or all commits (false)", defaults_to: false
end
%>

<p class="http-request-return-description">Returns</p>

A newly created [notification filter object](#the-notification-filter-object) for the user.
