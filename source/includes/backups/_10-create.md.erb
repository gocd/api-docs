## Schedules backup asynchronously.

```shell
$ curl 'https://ci.example.com/go/api/backups' \
      -i \
      -u 'username:password' \
      -H 'X-GoCD-Confirm: true' \
      -H 'Accept: <%= data.apis.versions.backup %>' \
      -X POST
```

> The above command returns an empty response body with a response code of 202 (Accepted) to indicate that 
request to backup is accepted and is scheduled asynchronously. It returns location header in the response 
that can be used for polling the status of the backup.

```http 
HTTP/1.1 202 Accepted
Content-Type: application/vnd.go.cd.v2+json;charset=utf-8
Location: /go/api/backups/:scheduled_backup_id
Retry-After: 5
```

```shell
$ curl 'https://ci.example.com/go/api/backups/:scheduled_backup_id' \
      -i \
      -u 'username:password' \
      -H 'Accept: <%= data.apis.versions.backup %>' \
      -X GET
```

> The above command is used to poll the status of the backup that was scheduled previously. It returns JSON structured like this:

```json
{
  "_links": {
    "doc": {
      "href": "https://api.gocd.org/#backups"
    }
  },
  "time": "2015-08-07T10:07:19.868Z",
  "path": "/var/lib/go-server/serverBackups/backup_20150807-153719",
  "status" : "COMPLETED",
  "progress_status" : "BACKUP_DATABASE",
  "message" : "Backup was generated successfully.",
  "user": {
    "_links": {
      "doc": {
        "href": "https://api.gocd.org/#users"
      },
      "self": {
        "href": "https://ci.example.com/go/api/users/username"
      },
      "find": {
        "href": "https://ci.example.com/go/api/users/:login_name"
      },
      "current_user" : {
        "href" : "https://ci.example.com/go/api/users/current_user"
      }
    },
    "login_name": "username"
  }
}
```

<aside class="warning">
  The server may be unavailable during the time that the backup is being taken.
</aside>

<%= available_since('19.3.0') do
  in_version '15.1.0', url: 'https://www.gocd.org/documentation/user/15.1.0/api/backup_api.html'
  in_version '14.4.0', url: 'https://www.gocd.org/documentation/user/14.4.0/api/backup_api.html'
  in_version '14.3.0', url: 'https://www.gocd.org/documentation/user/14.3.0/api/backup_api.html'
end
%>

<p class='http-request-heading'>HTTP Request</p>

`POST /go/api/backups`

<p class='http-request-return-description'>
  Returns an empty response body with a response code 202 (Accepted) and location header containing the link to be polled for checking the status of the backup.
</p>

`GET /go/api/backups/:scheduled_backup_id`

<aside class="notice">
  <strong>Note:</strong>
  You can use keyword 'running' as a scheduled_backup_id to know the details of a running backup.
</aside>

<p class='http-request-return-description'>Returns</p>
A new [backup object](#the-backup-object).
