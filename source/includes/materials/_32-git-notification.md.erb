## Notify git materials

```shell
$ curl 'https://ci.example.com/go/api/admin/materials/git/notify' \
      -u 'username:password' \
      -H 'Accept: <%= data.apis.versions.materials %>' \
      -H 'Content-Type: application/json'
      -X POST \
      -d {"repository_url": "git://git.example.com/git/funky-widgets.git"}
```

> The above command returns the following response:

```http
HTTP/1.1 202 Accepted
Content-Type: <%= data.apis.versions.materials %>; charset=UTF-8
```

```json
{"message": "The material is now scheduled for an update. Please check relevant pipeline(s) for status."}
```

<%= partial 'includes/shared/material_notify_header' %>

<%= updated_to(2, '19.10.0') %>
<%= available_since('14.3.0') %>

<p class='http-request-heading'>HTTP Request</p>

`POST /go/api/admin/materials/git/notify`

The following json payload must be specified.

<%=
  describe_object(nil) do
    repository_url  'String', 'The git repository url as defined in `cruise-config.xml` or a Config Repo'
  end
 %>

<p class='http-request-return-description'>Returns</p>

A confirmation message.

### Notification script

To notify GoCD via a Git post commit hook, you may use the following post commit hook in your git repository.

The post commit hook is located at `/path/to/repository.git/hooks/post-receive`.

```bash
#!/bin/sh

curl 'https://ci.example.com/go/api/admin/materials/notify/git' \
    -u 'username:password' \
    -H 'Accept: <%= data.apis.versions.materials %>' \
    -H 'Content-Type: application/json' \
    -X POST \
    -d "repository_url=git://git.example.com/git/funky-widgets.git"
```
