## Get stage

```shell
$ curl 'https://ci.example.com/go/api/feed/pipelines/mypipeline/4683/defaultStage/1.xml' \
      -u 'username:password'
```

> The above command returns XML structured like this:

```http
HTTP/1.1 200 OK
Content-Type: application/xml; charset=utf-8
```

```xml
<?xml version="1.0" encoding="UTF-8"?>
<stage name="defaultStage" counter="1">
  <link rel="self" href="https://ci.example.com/go/api/feed/pipelines/mypipeline/4683/defaultStage/1.xml"/>
  <id><![CDATA[urn:x-go.studios.thoughtworks.com:stage-id:mypipeline:4683:defaultStage:1]]></id>
  <pipeline name="defaultStage" counter="4683" label="4683" href="https://ci.example.com/go/api/feed/pipelines/mypipeline/4683.xml"/>
  <updated>2020-01-11T13:09:57Z</updated>
  <result>Passed</result>
  <state>Completed</state>
  <approvedBy><![CDATA[admin]]></approvedBy>
  <jobs>
    <job href="https://ci.example.com/go/api/feed/pipelines/mypipeline/4683/defaultStage/1/defaultJob.xml"/>
  </jobs>
</stage>

```

Gets XML representation of stage.

<%= updated_to(2,'20.1.0') %>
<%= available_since('14.3.0') %>

<p class='http-request-heading'>HTTP Request</p>

`GET /go/api/feed/pipelines/:pipeline_name/:pipeline_counter/:stage_name/:stage_counter.xml`

<p class='http-request-return-description'>Returns</p>

A xml representation of stage run.
