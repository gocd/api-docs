<%=
describe_object 'The plugin info object', since: '19.3.0' do
  id                    'String',  'Plugin unique identifier'
  status                'Object',  'The [status](#plugin-status) of the plugin.'
  plugin_file_location  'String',  'The location where the plugin is installed'
  bundled_plugin        'Boolean', 'Indicates whether the plugin is bundled with GoCD'
  about                 'Object',  '[Additional details](#plugin-about) about the plugin.'
  extensions            'Array',   'A list of [extension information](#config-repo-extension-info) pertaining to the list of extensions the plugin implements.'
end
%>

<%
    plugin_status = {
      state: "invalid",
      messages: ['Plugin not supported']
    }
%>

<%=
describe_sub_object 'The plugin status object', json: plugin_status, html_id: 'plugin-status' do
  state    'String', 'Status of the plugin.', one_of: %w(active invalid)
  messages 'Array', 'Array of messages stating the reason why the plugin isn\'t loaded. The messages are shown only if the status is  *invalid*.'
end
%>

<%
    vendor_json = {
      name: "GoCD contributors",
      url: "http://thoughtworks.com"
    }
%>

<%=
describe_sub_object 'The plugin vendor object', json: vendor_json, html_id: 'plugin-vendor' do
  name    'String', 'Name of the plugin author'
  url     'String', 'Link to know more details about the plugin author'
end
%>

<%
    about_json = {
      name: "GitHub Pull Requests Builder",
      version: "1.3.3",
      target_go_version: "15.1.0",
      description: "Plugin that polls a GitHub repository for pull requests and triggers a build for each of them",
      target_operating_systems: [],
      vendor:  {
        name: "GoCD contributors",
        url: "http://thoughtworks.com"
      }
    }
%>

<%=
describe_sub_object 'The plugin about object', json: about_json, html_id: 'plugin-about' do
  name                     'String', 'Name of the plugin'
  version                  'String', 'Version of the plugin that\'s installed'
  target_go_version        'String', 'Minimal version of GoCD required for the plugin to work'
  description              'String', "Short description about what the plugin does"
  target_operating_systems 'Array', 'List of operating systems on which the plugin is expected to work.'
  vendor                   'Object',  'Details about the [plugin author](#plugin-vendor)'
end
%>

<%
  config_repo_json = {
    extensions: [
      {
        type: 'configrepo',
        plugin_settings: {
          configurations: [
            {
              key: "url",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        },
        capabilities: {
          supports_pipeline_export: true,
          supports_parse_content: true
        }
      }
    ]
  }
%>

<%= describe_sub_object 'Extension information object: Config repo', json: config_repo_json, html_id: 'config-repo-extension-info' do
  type            'String', 'The type of the extension, which is `configrepo`'
  plugin_settings 'Object', 'The [html view](#the-plugin-info-view-object) for the plugin and the list of [properties](#the-plugin-info-configurations-object) required to be configured.'
  capabilities    'Object', 'The [capabilities](#config-repo-capabilites-object) object indicates the enhancements that a plugin provides.'
 end
 %>

 <%
  elastic_agent_json = {
    extensions: [
      {
        type: 'elastic',
        elastic_agent_profile_settings: {
          configurations: [
            {
              key: "Image",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Elastic agent profile template</div>"
          }
        },
        supports_cluster_profiles: true,
        cluster_profile_settings: {
          configurations: [
            {
              key: "EfsDnsOrIP",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Cluster Profile view template</div>"
          }
        },
        capabilities: {
          supports_plugin_status_report: true,
          supports_agent_status_report: true,
          supports_cluster_status_report: true
        }
      },
      {
        type: 'elastic',
        elastic_agent_profile_settings: {
          configurations: [
            {
              key: "Image",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Elastic agent profile template</div>"
          }
        },
        supports_cluster_profiles: false,
        plugin_settings: {
          configurations: [
            {
              key: "EfsDnsOrIP",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        },
        capabilities: {
          supports_plugin_status_report: true,
          supports_agent_status_report: true,
          supports_cluster_status_report: false
        }
      }
    ]
  }
 %>

<%= describe_sub_object 'Extension information object: Elastic agent', json: elastic_agent_json, html_id: 'elastic-agent-extension-info' do
    type                            'String',  'The type of the extension, which is `elastic`'
    plugin_settings                 'Object',  'The [html view](#the-plugin-info-view-object) for the plugin and the list of [properties](#the-plugin-info-configurations-object) required to be configured. Present in case of plugin supports plugin settings. '
    supports_cluster_profiles       'Boolean', 'Boolean indicating whether plugin supports defining cluster profiles.'
    elastic_agent_profile_settings  'Object',  'The [html view](#the-plugin-info-view-object) for the elastic agent profile and the list of [properties](#the-plugin-info-configurations-object) required to be configured.'
    cluster_profile_settings        'Object',  'The [html view](#the-plugin-info-view-object) for the cluster profile and the list of [properties](#the-plugin-info-configurations-object) required to be configured. Present in case of plugin supports defining cluster profiles.'
    capabilities                    'Object',  'The [capabilities](#elastic-agent-capabilites-object) object indicates the enhancements that a plugin provides.'
 end
 %>

 <%
  auth_json = {
    extensions: [
      {
        type: 'authorization',
        auth_config_settings: {
          configurations: [
            {
              key: "Id",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Auth view template</div>"
          }
        },
        role_settings: {
          configurations: [
            {
              key: "Name",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Role view template</div>"
          }
        },
        capabilities: {
          can_search: true,
          supported_auth_type: 'password',
          can_authorize: true
        }
      }
    ]
  }
 %>

<%= describe_sub_object 'Extension information object: Authorization', json: auth_json, html_id: 'auth-extension-info' do
    type                  'String', 'The type of the extension, which is `authorization`'
    auth_config_settings  'Object',  'The [html view](#the-plugin-info-view-object) for auth config and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure auth configs.'
    role_settings         'Object',  'The [html view](#the-plugin-info-view-object) for role config and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure role configs.'
    capabilities          'Object',  'The [capabilities](#authorization-capabilites-object) object indicates the enhancements that a plugin provides.'
 end
 %>

 <%
  scm_json = {
    extensions: [
      {
        type: 'scm',
        display_name: "Github",
        scm_settings: {
          configurations: [
            {
              key: "url",
              metadata: {
                secure: false,
                required: true,
                part_of_identity: true
              }
            }
          ],
          view: {
            template: "<div>Scm view template</div>"
          }
        }
      }
    ]
  }
 %>

<%= describe_sub_object 'Extension information object: SCM', json: scm_json, html_id: 'scm-extension-info' do
    type          'String', 'The type of the extension, which is `scm`'
    display_name  'String',  'The descriptive name of the plugin'
    scm_settings  'Object',  'The [html view](#the-plugin-info-view-object) for pluggable scm and the list of [properties](#scm-configurations) that can be used to configure the pluggable scm material.'
 end
 %>

<%
  task_json = {
    extensions: [
      {
        type: 'task',
        display_name: "Task",
        task_settings: {
          configurations: [
            {
              key: "script",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>task view template</div>"
          }
        }
      }
    ]
  }
 %>

<%= describe_sub_object 'Extension information object: Task', json: task_json, html_id: 'task-extension-info' do
    type          'String', 'The type of the extension, which is `task`'
    display_name  'String', 'The descriptive name of the plugin'
    task_settings 'Object', 'The [html view](#the-plugin-info-view-object) for pluggable task and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure the pluggable task.'
 end
 %>

<%
  pkg_repo_json = {
    extensions: [
      {
        type: 'package-repository',
        package_settings: {
          configurations: [
            {
              key: "PACKAGE_SPEC",
              metadata: {
                secure: false,
                display_order: 0,
                required: true,
                part_of_identity: false,
                display_name: "Package Spec"
              }
            }
          ]
        },
        repository_settings: {
          configurations: [
            {
              key: "REPO_URL",
              metadata: {
                secure: false,
                display_order: 0,
                required: true,
                part_of_identity: false,
                display_name: "Repository URL"
              }
            }
          ]
        }
      }
    ]
  }
 %>

<%= describe_sub_object 'Extension information object: Package repo', json: pkg_repo_json, html_id: 'pkg-repo-extension-info' do
    type                 'String', 'The type of the extension, which is `package-repository`'
    package_settings     'Object',  'The list of [properties](#package-repository-configurations) that can be used to configure a package material. A form is created for the user based on these properties. No request is currently made to fetch the view for package settings.'
    repository_settings  'Object',  'The list of [properties](#package-repository-configurations) that can be used to configure package repositories. A form is created for the user based on these properties. No request is currently made to fetch the view for repository settings.'
 end
%>

<%
  notification_json = {
    extensions: [
      {
        type: 'notification',
        plugin_settings: {
          configurations: [
            {
              key: "url",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        }
      }
    ]
  }
%>

<%= describe_sub_object 'Extension information object: Notification', json: notification_json, html_id: 'notification-extension-info' do
  type            'String', 'The type of the extension, which is `notification`'
  plugin_settings 'Object', 'The [html view](#the-plugin-info-view-object) for the plugin and the list of [properties](#the-plugin-info-configurations-object) required to be configured.'
 end
 %>

 <%
  analytics_json = {
    extensions: [
      {
        type: 'analytics',
        plugin_settings: {
          configurations: [
            {
              key: "analytics_source_url",
              metadata: {
                secure: false,
                required: true
              }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        },
        capabilities: {
          supported_analytics: [
            {
              type: "pipeline",
              id: "pipeline_duration",
              title: "Pipeline Duration"
            }
          ]
        }
      }
    ]
  }
%>

<%= describe_sub_object 'Extension information object: Analytics', json: analytics_json, html_id: 'analytics-extension-info' do
    type              'String', 'The type of the extension, which is `analytics`'
    plugin_settings   'Object',  'The [html view](#the-plugin-info-view-object) for the plugin and the list of [properties](#the-plugin-info-configurations-object) required to be configured.'
    capabilities      'Object',  'The [capabilities](#analytics-capabilites-object) object indicates the enhancements that a plugin provides.'
 end
 %>



 <%
  artifact_json = {
    extensions: [
      {
        type: 'artifact',
        store_config_settings: {
          configurations: [
            {
                key: "RegistryURL",
                metadata: {
                  secure: false,
                  required: true
                }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        },
        artifact_config_settings: {
            configurations: [
              {
                  key: "BuildFile",
                  metadata: {
                    secure: false,
                    required: false
                  }
              }
            ],
            view: {
              template: "<div>Plugin view template</div>"
            }
        },
        fetch_artifact_settings: {
            configurations: [
              {
                  key: "EnvironmentVariablePrefix",
                  metadata: {
                  secure: false,
                  required: false
                  }
              }
            ],
            view: {
              template: "<div>Plugin view template</div>"
            }
        }
      }
    ]
  }
%>

<%= describe_sub_object 'Extension information object: Artifact', json: artifact_json, html_id: 'artifact-extension-info' do
    type              'String', 'The type of the extension, which is `artifact`'
    store_config_settings    'Object',  'The [html view](#the-plugin-info-view-object) to configure the artifact store and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure the artifact store.'
    artifact_config_settings 'Object',  'The [html view](#the-plugin-info-view-object) to configure the publish artifact configs and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure publish artifact config.'
    fetch_artifact_settings  'Object',  'The [html view](#the-plugin-info-view-object) to configure the fetch artifact config and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure fetch artifact config.'
 end
 %>


 <%
  secrets_json = {
    extensions: [
      {
        type: 'secrets',
        secret_config_settings: {
          configurations: [
            {
                key: "FilePath",
                metadata: {
                  secure: false,
                  required: true
                }
            }
          ],
          view: {
            template: "<div>Plugin view template</div>"
          }
        }
      }
    ]
  }
%>

<%= describe_sub_object 'Extension information object: Secrets', json: secrets_json, html_id: 'secrets-extension-info' do
    type              'String', 'The type of the extension, which is `secrets`'
    secret_config_settings    'Object',  'The [html view](#the-plugin-info-view-object) to configure the secret configs and the list of [properties](#the-plugin-info-configurations-object) that can be used to configure the secret configs.'
 end
 %>
